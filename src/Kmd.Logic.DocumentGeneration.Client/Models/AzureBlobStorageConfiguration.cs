// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Logic.DocumentGeneration.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AzureBlobStorageConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the AzureBlobStorageConfiguration
        /// class.
        /// </summary>
        public AzureBlobStorageConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureBlobStorageConfiguration
        /// class.
        /// </summary>
        /// <param name="templateStorageType">Possible values include:
        /// 'SharePointOnline', 'AzureBlobStorage'</param>
        public AzureBlobStorageConfiguration(string templateStorageType = default(string), string secretKeyForStorageConnectionString = default(string), string containerName = default(string), string blobPrefix = default(string))
        {
            TemplateStorageType = templateStorageType;
            SecretKeyForStorageConnectionString = secretKeyForStorageConnectionString;
            ContainerName = containerName;
            BlobPrefix = blobPrefix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'SharePointOnline',
        /// 'AzureBlobStorage'
        /// </summary>
        [JsonProperty(PropertyName = "templateStorageType")]
        public string TemplateStorageType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "secretKeyForStorageConnectionString")]
        public string SecretKeyForStorageConnectionString { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "containerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "blobPrefix")]
        public string BlobPrefix { get; set; }

    }
}
