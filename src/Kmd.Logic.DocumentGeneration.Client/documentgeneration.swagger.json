{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "KMD Logic Document Generation Service API"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/document-generation/requests": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Requests document generation.",
        "operationId": "RequestDocumentGeneration",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Identifier of Logic subscription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Document generation parameters.",
            "schema": {
              "$ref": "#/definitions/GenerateDocumentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentGenerationRequest"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/document-generation/requests/{requestId}": {
      "get": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Gets document generation request.",
        "operationId": "GetDocumentGeneration",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Identifier of Logic subscription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "Identifier of request to return.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentGenerationRequest"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/document-generation/documents/{requestId}": {
      "get": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Gets document generated for provided request.",
        "operationId": "GetDocument",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Identifier of Logic subscription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "Identifier of request which document should be retuned.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "GenerateDocumentRequest": {
      "type": "object",
      "properties": {
        "configurationId": {
          "format": "uuid",
          "description": "Identifier of configuration to be used.",
          "type": "string"
        },
        "key": {
          "format": "uuid",
          "description": "Key specifying which entry from configuration to be used.",
          "type": "string"
        },
        "templateId": {
          "description": "Identifier of template to be used.",
          "type": "string"
        },
        "language": {
          "description": "Language code in ISO 639-2 format (eg. en).",
          "type": "string"
        },
        "mergeData": {
          "description": "Data to be merge into document.",
          "type": "object"
        }
      }
    },
    "DocumentGenerationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "key": {
          "format": "uuid",
          "type": "string"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Requested",
            "Completed",
            "Failed"
          ]
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "Standard Authorization header using the Bearer scheme. <b>Example: \"bearer {token}\".</b> You can obtain that value from your browser Developer tools"
    }
  }
}